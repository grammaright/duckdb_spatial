require spatial

# Geometry
statement ok
CREATE TABLE types (geom GEOMETRY);

statement ok
INSERT INTO types VALUES
    (ST_GeomFromText('POINT EMPTY')),
    (ST_GeomFromText('POINT(0 0)')),
    (ST_GeomFromText('LINESTRING EMPTY')),
    (ST_GeomFromText('LINESTRING(0 0, 1 1)')),
    (ST_GeomFromText('POLYGON EMPTY')),
    (ST_GeomFromText('POLYGON((0 0, 1 0, 1 1, 0 1, 0 0))')),
    (ST_GeomFromText('MULTIPOINT EMPTY')),
    (ST_GeomFromText('MULTIPOINT(0 0, 1 1)')),
    (ST_GeomFromText('MULTILINESTRING EMPTY')),
    (ST_GeomFromText('MULTILINESTRING((0 0, 1 1), (2 2, 3 3))')),
    (ST_GeomFromText('MULTIPOLYGON EMPTY')),
    (ST_GeomFromText('MULTIPOLYGON(((0 0, 1 0, 1 1, 0 1, 0 0)), ((2 2, 3 2, 3 3, 2 3, 2 2)))')),
    (ST_GeomFromText('GEOMETRYCOLLECTION EMPTY')),
    (ST_GeomFromText('GEOMETRYCOLLECTION(POINT(0 0), LINESTRING(0 0, 1 1))'));

query I
SELECT ST_AsGeoJSON(geom) FROM types;
----
{"type":"Point","coordinates":[]}
{"type":"Point","coordinates":[0.0,0.0]}
{"type":"LineString","coordinates":[]}
{"type":"LineString","coordinates":[[0.0,0.0],[1.0,1.0]]}
{"type":"Polygon","coordinates":[]}
{"type":"Polygon","coordinates":[[[0.0,0.0],[1.0,0.0],[1.0,1.0],[0.0,1.0],[0.0,0.0]]]}
{"type":"MultiPoint","coordinates":[]}
{"type":"MultiPoint","coordinates":[[0.0,0.0],[1.0,1.0]]}
{"type":"MultiLineString","coordinates":[]}
{"type":"MultiLineString","coordinates":[[[0.0,0.0],[1.0,1.0]],[[2.0,2.0],[3.0,3.0]]]}
{"type":"MultiPolygon","coordinates":[]}
{"type":"MultiPolygon","coordinates":[[[[0.0,0.0],[1.0,0.0],[1.0,1.0],[0.0,1.0],[0.0,0.0]]],[[[2.0,2.0],[3.0,2.0],[3.0,3.0],[2.0,3.0],[2.0,2.0]]]]}
{"type":"GeometryCollection","geometries":[]}
{"type":"GeometryCollection","geometries":[{"type":"Point","coordinates":[0.0,0.0]},{"type":"LineString","coordinates":[[0.0,0.0],[1.0,1.0]]}]}

query I
SELECT ST_GeomFromGeoJSON(ST_AsGeoJSON(geom)) FROM types;
----
POINT EMPTY
POINT (0 0)
LINESTRING EMPTY
LINESTRING (0 0, 1 1)
POLYGON EMPTY
POLYGON ((0 0, 1 0, 1 1, 0 1, 0 0))
MULTIPOINT EMPTY
MULTIPOINT (0 0, 1 1)
MULTILINESTRING EMPTY
MULTILINESTRING ((0 0, 1 1), (2 2, 3 3))
MULTIPOLYGON EMPTY
MULTIPOLYGON (((0 0, 1 0, 1 1, 0 1, 0 0)), ((2 2, 3 2, 3 3, 2 3, 2 2)))
GEOMETRYCOLLECTION EMPTY
GEOMETRYCOLLECTION (POINT (0 0), LINESTRING (0 0, 1 1))



# Test that we can read with 3 dimensions
query I
SELECT ST_GeomFromGeoJSON('{"type":"Point","coordinates":[1.0,2.0,3.0]}');
----
POINT Z (1 2 3)

#linestring
query I
SELECT ST_GeomFromGeoJSON('{"type":"LineString","coordinates":[[1.0,2.0,3.0],[4.0,5.0,6.0]]}');
----
LINESTRING Z (1 2 3, 4 5 6)

# polygon
query I
SELECT ST_GeomFromGeoJSON('{"type":"Polygon","coordinates":[[[1.0,2.0,3.0],[4.0,5.0,6.0],[7.0,8.0,9.0],[1.0,2.0,3.0]]]}');
----
POLYGON Z ((1 2 3, 4 5 6, 7 8 9, 1 2 3))

query I
SELECT ST_GeomFromGeoJSON('{"type":"MultiPoint","coordinates":[[1.0,2.0,3.0],[4.0,5.0,6.0]]}');
----
MULTIPOINT Z (1 2 3, 4 5 6)

query I
SELECT ST_AsGeoJSON('POINT Z(1 2 3)');
----
{"type":"Point","coordinates":[1.0,2.0,3.0]}

query I
SELECT ST_AsGeoJSON('LINESTRING Z(1 2 3, 4 5 6)');
----
{"type":"LineString","coordinates":[[1.0,2.0,3.0],[4.0,5.0,6.0]]}

query I
SELECT ST_AsGeoJSON('POLYGON Z((1 2 3, 4 5 6, 7 8 9, 1 2 3))');
----
{"type":"Polygon","coordinates":[[[1.0,2.0,3.0],[4.0,5.0,6.0],[7.0,8.0,9.0],[1.0,2.0,3.0]]]}

# M values are not supported
query I
SELECT ST_AsGeoJSON('POINT M(1 2 3)');
----
{"type":"Point","coordinates":[1.0,2.0]}

query I
SELECT ST_AsGeoJSON('LINESTRING ZM (1 2 3 4, 4 5 6 7)');
----
{"type":"LineString","coordinates":[[1.0,2.0,3.0],[4.0,5.0,6.0]]}